%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 3.26.8

-ifndef(ots_proto).
-define(ots_proto, true).

-define(ots_proto_gpb_version, "3.26.8").

-ifndef('CONDITION_PB_H').
-define('CONDITION_PB_H', true).
-record('Condition',
        {row_existence,                 % = 1, {enum,'RowExistenceExpectation'}
         column_condition               % = 2, bytes (optional)
        }).
-endif.

-ifndef('CAPACITYUNIT_PB_H').
-define('CAPACITYUNIT_PB_H', true).
-record('CapacityUnit',
        {read,                          % = 1, int32 (optional)
         write                          % = 2, int32 (optional)
        }).
-endif.

-ifndef('CONSUMEDCAPACITY_PB_H').
-define('CONSUMEDCAPACITY_PB_H', true).
-record('ConsumedCapacity',
        {capacity_unit                  % = 1, {msg,'CapacityUnit'}
        }).
-endif.

-ifndef('COMPUTESPLITPOINTSBYSIZERESPONSE.SPLITLOCATION_PB_H').
-define('COMPUTESPLITPOINTSBYSIZERESPONSE.SPLITLOCATION_PB_H', true).
-record('ComputeSplitPointsBySizeResponse.SplitLocation',
        {location,                      % = 1, string
         repeat                         % = 2, sint64
        }).
-endif.

-ifndef('PRIMARYKEYSCHEMA_PB_H').
-define('PRIMARYKEYSCHEMA_PB_H', true).
-record('PrimaryKeySchema',
        {name,                          % = 1, string
         type,                          % = 2, {enum,'PrimaryKeyType'}
         option                         % = 3, {enum,'PrimaryKeyOption'} (optional)
        }).
-endif.

-ifndef('COMPUTESPLITPOINTSBYSIZERESPONSE_PB_H').
-define('COMPUTESPLITPOINTSBYSIZERESPONSE_PB_H', true).
-record('ComputeSplitPointsBySizeResponse',
        {consumed,                      % = 1, {msg,'ConsumedCapacity'}
         schema = [],                   % = 2, [{msg,'PrimaryKeySchema'}]
         split_points = [],             % = 3, [bytes]
         locations = []                 % = 4, [{msg,'ComputeSplitPointsBySizeResponse.SplitLocation'}]
        }).
-endif.

-ifndef('DELETETABLERESPONSE_PB_H').
-define('DELETETABLERESPONSE_PB_H', true).
-record('DeleteTableResponse',
        {
        }).
-endif.

-ifndef('CREATETABLERESPONSE_PB_H').
-define('CREATETABLERESPONSE_PB_H', true).
-record('CreateTableResponse',
        {
        }).
-endif.

-ifndef('TABLEOPTIONS_PB_H').
-define('TABLEOPTIONS_PB_H', true).
-record('TableOptions',
        {time_to_live,                  % = 1, int32 (optional)
         max_versions,                  % = 2, int32 (optional)
         bloom_filter_type,             % = 3, {enum,'BloomFilterType'} (optional)
         block_size,                    % = 4, int32 (optional)
         deviation_cell_version_in_sec  % = 5, int64 (optional)
        }).
-endif.

-ifndef('RESERVEDTHROUGHPUTDETAILS_PB_H').
-define('RESERVEDTHROUGHPUTDETAILS_PB_H', true).
-record('ReservedThroughputDetails',
        {capacity_unit,                 % = 1, {msg,'CapacityUnit'}
         last_increase_time,            % = 2, int64
         last_decrease_time             % = 3, int64 (optional)
        }).
-endif.

-ifndef('TABLEMETA_PB_H').
-define('TABLEMETA_PB_H', true).
-record('TableMeta',
        {table_name,                    % = 1, string
         primary_key = []               % = 2, [{msg,'PrimaryKeySchema'}]
        }).
-endif.

-ifndef('DESCRIBETABLERESPONSE_PB_H').
-define('DESCRIBETABLERESPONSE_PB_H', true).
-record('DescribeTableResponse',
        {table_meta,                    % = 1, {msg,'TableMeta'}
         reserved_throughput_details,   % = 2, {msg,'ReservedThroughputDetails'}
         table_options,                 % = 3, {msg,'TableOptions'}
         table_status,                  % = 4, {enum,'TableStatus'}
         shard_splits = []              % = 6, [bytes]
        }).
-endif.

-ifndef('PARTITIONRANGE_PB_H').
-define('PARTITIONRANGE_PB_H', true).
-record('PartitionRange',
        {'begin',                       % = 1, bytes
         'end'                          % = 2, bytes
        }).
-endif.

-ifndef('RETURNCONTENT_PB_H').
-define('RETURNCONTENT_PB_H', true).
-record('ReturnContent',
        {return_type                    % = 1, {enum,'ReturnType'} (optional)
        }).
-endif.

-ifndef('ROWINBATCHWRITEROWREQUEST_PB_H').
-define('ROWINBATCHWRITEROWREQUEST_PB_H', true).
-record('RowInBatchWriteRowRequest',
        {type,                          % = 1, {enum,'OperationType'}
         row_change,                    % = 2, bytes
         condition,                     % = 3, {msg,'Condition'}
         return_content                 % = 4, {msg,'ReturnContent'} (optional)
        }).
-endif.

-ifndef('TABLEINBATCHWRITEROWREQUEST_PB_H').
-define('TABLEINBATCHWRITEROWREQUEST_PB_H', true).
-record('TableInBatchWriteRowRequest',
        {table_name,                    % = 1, string
         rows = []                      % = 2, [{msg,'RowInBatchWriteRowRequest'}]
        }).
-endif.

-ifndef('BATCHWRITEROWREQUEST_PB_H').
-define('BATCHWRITEROWREQUEST_PB_H', true).
-record('BatchWriteRowRequest',
        {tables = []                    % = 1, [{msg,'TableInBatchWriteRowRequest'}]
        }).
-endif.

-ifndef('UNLOADTABLEREQUEST_PB_H').
-define('UNLOADTABLEREQUEST_PB_H', true).
-record('UnloadTableRequest',
        {table_name                     % = 1, string
        }).
-endif.

-ifndef('LOADTABLEREQUEST_PB_H').
-define('LOADTABLEREQUEST_PB_H', true).
-record('LoadTableRequest',
        {table_name                     % = 1, string
        }).
-endif.

-ifndef('PUTROWREQUEST_PB_H').
-define('PUTROWREQUEST_PB_H', true).
-record('PutRowRequest',
        {table_name,                    % = 1, string
         row,                           % = 2, bytes
         condition,                     % = 3, {msg,'Condition'}
         return_content                 % = 4, {msg,'ReturnContent'} (optional)
        }).
-endif.

-ifndef('ERROR_PB_H').
-define('ERROR_PB_H', true).
-record('Error',
        {code,                          % = 1, string
         message                        % = 2, string (optional)
        }).
-endif.

-ifndef('ROWINBATCHGETROWRESPONSE_PB_H').
-define('ROWINBATCHGETROWRESPONSE_PB_H', true).
-record('RowInBatchGetRowResponse',
        {is_ok,                         % = 1, bool
         error,                         % = 2, {msg,'Error'} (optional)
         consumed,                      % = 3, {msg,'ConsumedCapacity'} (optional)
         row,                           % = 4, bytes (optional)
         next_token                     % = 5, bytes (optional)
        }).
-endif.

-ifndef('UPDATETABLERESPONSE_PB_H').
-define('UPDATETABLERESPONSE_PB_H', true).
-record('UpdateTableResponse',
        {reserved_throughput_details,   % = 1, {msg,'ReservedThroughputDetails'}
         table_options                  % = 2, {msg,'TableOptions'}
        }).
-endif.

-ifndef('PUTROWRESPONSE_PB_H').
-define('PUTROWRESPONSE_PB_H', true).
-record('PutRowResponse',
        {consumed,                      % = 1, {msg,'ConsumedCapacity'}
         row                            % = 2, bytes (optional)
        }).
-endif.

-ifndef('RESERVEDTHROUGHPUT_PB_H').
-define('RESERVEDTHROUGHPUT_PB_H', true).
-record('ReservedThroughput',
        {capacity_unit                  % = 1, {msg,'CapacityUnit'}
        }).
-endif.

-ifndef('TIMERANGE_PB_H').
-define('TIMERANGE_PB_H', true).
-record('TimeRange',
        {start_time,                    % = 1, int64 (optional)
         end_time,                      % = 2, int64 (optional)
         specific_time                  % = 3, int64 (optional)
        }).
-endif.

-ifndef('TABLEINBATCHGETROWREQUEST_PB_H').
-define('TABLEINBATCHGETROWREQUEST_PB_H', true).
-record('TableInBatchGetRowRequest',
        {table_name,                    % = 1, string
         primary_key = [],              % = 2, [bytes]
         token = [],                    % = 3, [bytes]
         columns_to_get = [],           % = 4, [string]
         time_range,                    % = 5, {msg,'TimeRange'} (optional)
         max_versions,                  % = 6, int32 (optional)
         cache_blocks = true,           % = 7, bool (optional)
         filter,                        % = 8, bytes (optional)
         start_column,                  % = 9, string (optional)
         end_column                     % = 10, string (optional)
        }).
-endif.

-ifndef('BATCHGETROWREQUEST_PB_H').
-define('BATCHGETROWREQUEST_PB_H', true).
-record('BatchGetRowRequest',
        {tables = []                    % = 1, [{msg,'TableInBatchGetRowRequest'}]
        }).
-endif.

-ifndef('DELETETABLEREQUEST_PB_H').
-define('DELETETABLEREQUEST_PB_H', true).
-record('DeleteTableRequest',
        {table_name                     % = 1, string
        }).
-endif.

-ifndef('LISTTABLEREQUEST_PB_H').
-define('LISTTABLEREQUEST_PB_H', true).
-record('ListTableRequest',
        {
        }).
-endif.

-ifndef('UPDATETABLEREQUEST_PB_H').
-define('UPDATETABLEREQUEST_PB_H', true).
-record('UpdateTableRequest',
        {table_name,                    % = 1, string
         reserved_throughput,           % = 2, {msg,'ReservedThroughput'} (optional)
         table_options                  % = 3, {msg,'TableOptions'} (optional)
        }).
-endif.

-ifndef('CREATETABLEREQUEST_PB_H').
-define('CREATETABLEREQUEST_PB_H', true).
-record('CreateTableRequest',
        {table_meta,                    % = 1, {msg,'TableMeta'}
         reserved_throughput,           % = 2, {msg,'ReservedThroughput'}
         table_options,                 % = 3, {msg,'TableOptions'} (optional)
         partitions = []                % = 4, [{msg,'PartitionRange'}]
        }).
-endif.

-ifndef('GETROWREQUEST_PB_H').
-define('GETROWREQUEST_PB_H', true).
-record('GetRowRequest',
        {table_name,                    % = 1, string
         primary_key,                   % = 2, bytes
         columns_to_get = [],           % = 3, [string]
         time_range,                    % = 4, {msg,'TimeRange'} (optional)
         max_versions,                  % = 5, int32 (optional)
         cache_blocks = true,           % = 6, bool (optional)
         filter,                        % = 7, bytes (optional)
         start_column,                  % = 8, string (optional)
         end_column,                    % = 9, string (optional)
         token                          % = 10, bytes (optional)
        }).
-endif.

-ifndef('DESCRIBETABLEREQUEST_PB_H').
-define('DESCRIBETABLEREQUEST_PB_H', true).
-record('DescribeTableRequest',
        {table_name                     % = 1, string
        }).
-endif.

-ifndef('DELETEROWRESPONSE_PB_H').
-define('DELETEROWRESPONSE_PB_H', true).
-record('DeleteRowResponse',
        {consumed,                      % = 1, {msg,'ConsumedCapacity'}
         row                            % = 2, bytes (optional)
        }).
-endif.

-ifndef('UNLOADTABLERESPONSE_PB_H').
-define('UNLOADTABLERESPONSE_PB_H', true).
-record('UnloadTableResponse',
        {
        }).
-endif.

-ifndef('ROWINBATCHWRITEROWRESPONSE_PB_H').
-define('ROWINBATCHWRITEROWRESPONSE_PB_H', true).
-record('RowInBatchWriteRowResponse',
        {is_ok,                         % = 1, bool
         error,                         % = 2, {msg,'Error'} (optional)
         consumed,                      % = 3, {msg,'ConsumedCapacity'} (optional)
         row                            % = 4, bytes (optional)
        }).
-endif.

-ifndef('TABLEINBATCHWRITEROWRESPONSE_PB_H').
-define('TABLEINBATCHWRITEROWRESPONSE_PB_H', true).
-record('TableInBatchWriteRowResponse',
        {table_name,                    % = 1, string
         rows = []                      % = 2, [{msg,'RowInBatchWriteRowResponse'}]
        }).
-endif.

-ifndef('BATCHWRITEROWRESPONSE_PB_H').
-define('BATCHWRITEROWRESPONSE_PB_H', true).
-record('BatchWriteRowResponse',
        {tables = []                    % = 1, [{msg,'TableInBatchWriteRowResponse'}]
        }).
-endif.

-ifndef('UPDATEROWRESPONSE_PB_H').
-define('UPDATEROWRESPONSE_PB_H', true).
-record('UpdateRowResponse',
        {consumed,                      % = 1, {msg,'ConsumedCapacity'}
         row                            % = 2, bytes (optional)
        }).
-endif.

-ifndef('GETROWRESPONSE_PB_H').
-define('GETROWRESPONSE_PB_H', true).
-record('GetRowResponse',
        {consumed,                      % = 1, {msg,'ConsumedCapacity'}
         row,                           % = 2, bytes
         next_token                     % = 3, bytes (optional)
        }).
-endif.

-ifndef('GETRANGERESPONSE_PB_H').
-define('GETRANGERESPONSE_PB_H', true).
-record('GetRangeResponse',
        {consumed,                      % = 1, {msg,'ConsumedCapacity'}
         rows,                          % = 2, bytes
         next_start_primary_key,        % = 3, bytes (optional)
         next_token                     % = 4, bytes (optional)
        }).
-endif.

-ifndef('TABLEINBATCHGETROWRESPONSE_PB_H').
-define('TABLEINBATCHGETROWRESPONSE_PB_H', true).
-record('TableInBatchGetRowResponse',
        {table_name,                    % = 1, string
         rows = []                      % = 2, [{msg,'RowInBatchGetRowResponse'}]
        }).
-endif.

-ifndef('BATCHGETROWRESPONSE_PB_H').
-define('BATCHGETROWRESPONSE_PB_H', true).
-record('BatchGetRowResponse',
        {tables = []                    % = 1, [{msg,'TableInBatchGetRowResponse'}]
        }).
-endif.

-ifndef('LOADTABLERESPONSE_PB_H').
-define('LOADTABLERESPONSE_PB_H', true).
-record('LoadTableResponse',
        {
        }).
-endif.

-ifndef('LISTTABLERESPONSE_PB_H').
-define('LISTTABLERESPONSE_PB_H', true).
-record('ListTableResponse',
        {table_names = []               % = 1, [string]
        }).
-endif.

-ifndef('GETRANGEREQUEST_PB_H').
-define('GETRANGEREQUEST_PB_H', true).
-record('GetRangeRequest',
        {table_name,                    % = 1, string
         direction,                     % = 2, {enum,'Direction'}
         columns_to_get = [],           % = 3, [string]
         time_range,                    % = 4, {msg,'TimeRange'} (optional)
         max_versions,                  % = 5, int32 (optional)
         limit,                         % = 6, int32 (optional)
         inclusive_start_primary_key,   % = 7, bytes
         exclusive_end_primary_key,     % = 8, bytes
         cache_blocks = true,           % = 9, bool (optional)
         filter,                        % = 10, bytes (optional)
         start_column,                  % = 11, string (optional)
         end_column,                    % = 12, string (optional)
         token                          % = 13, bytes (optional)
        }).
-endif.

-ifndef('UPDATEROWREQUEST_PB_H').
-define('UPDATEROWREQUEST_PB_H', true).
-record('UpdateRowRequest',
        {table_name,                    % = 1, string
         row_change,                    % = 2, bytes
         condition,                     % = 3, {msg,'Condition'}
         return_content                 % = 4, {msg,'ReturnContent'} (optional)
        }).
-endif.

-ifndef('DELETEROWREQUEST_PB_H').
-define('DELETEROWREQUEST_PB_H', true).
-record('DeleteRowRequest',
        {table_name,                    % = 1, string
         primary_key,                   % = 2, bytes
         condition,                     % = 3, {msg,'Condition'}
         return_content                 % = 4, {msg,'ReturnContent'} (optional)
        }).
-endif.

-ifndef('COMPUTESPLITPOINTSBYSIZEREQUEST_PB_H').
-define('COMPUTESPLITPOINTSBYSIZEREQUEST_PB_H', true).
-record('ComputeSplitPointsBySizeRequest',
        {table_name,                    % = 1, string
         split_size                     % = 2, int64
        }).
-endif.

-endif.
